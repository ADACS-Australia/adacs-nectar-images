name: ADACS image build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  OS_AUTH_TYPE: ${{ secrets.OS_AUTH_TYPE }}
  OS_AUTH_URL: ${{ secrets.OS_AUTH_URL }}
  OS_IDENTITY_API_VERSION: ${{ secrets.OS_IDENTITY_API_VERSION }}
  OS_REGION_NAME: ${{ secrets.OS_REGION_NAME }}
  OS_INTERFACE: ${{ secrets.OS_INTERFACE }}
  OS_APPLICATION_CREDENTIAL_ID: ${{ secrets.OS_APPLICATION_CREDENTIAL_ID }}
  OS_APPLICATION_CREDENTIAL_SECRET: ${{ secrets.OS_APPLICATION_CREDENTIAL_SECRET }}
  TF_CLI_ARGS: -no-color
  ANSIBLE_NOCOLOR: 1

jobs:
  start_nfs:
    runs-on: ubuntu-latest
    if: "always()"

    steps:
    - uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false

    - name: Terraform apply
      working-directory: ./build/nfs
      run: |
        terraform init
        terraform fmt -check
        terraform apply -auto-approve > /dev/null

  build:
    needs: start_nfs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - image_basic
          - image_astro_A
          - image_astro_A_intel_idl
          - image_astro_B
          - image_idl
          - image_intel
          - image_intel_idl_conda
          - image_mathematica
          - image_matlab
          - image_abaqus

    steps:
    - uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false

    - uses: ./.github/actions/install-tools

    - name: build -> test -> release
      run: ./run.sh ./image_vars/${{ matrix.image }}.sh

  stop_nfs:
    needs: build
    runs-on: ubuntu-latest
    if: "always()"

    steps:
    - uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false

    - name: Terraform destroy
      working-directory: ./build/nfs
      run: |
        terraform init
        terraform fmt -check
        terraform destroy -auto-approve > /dev/null
